
<<include=FALSE>>=
library(knitr)
opts_chunk$set(concordance=TRUE)
options(digits = 3)

t_test_p_value <- function(view)
{
  dt1 <- setkey(cum.ret[Views==view],Quarters,Method,type)
  dt2 <-setkey(cum.ret[Views!=view],Quarters,Method,type)

  dt <- dt2[dt1][,as.list(htest.short(t.test(ann.cum.ret,i.ann.cum.ret,alternative='t',paired=T))),by=.(Method,type,Views)]
  abind(acast(dt,Views~type~Method,value.var='t'),acast(dt,Views~type~Method,value.var='p'),along=4)
}
@

%' <<set-parent, echo=FALSE, cache=FALSE>>=
%' set_parent('~/Dropbox/workspace/Projects/Thesis/paper.Rnw')
%' @


<<load.data,echo=F,warning=FALSE,message=FALSE>>=
strategies <- c('true','recent','all-time')
sets <- c('all','same')
setwd('~/Dropbox/workspace/Projects/BL-strategies')
library(reshape2)
library(descr)
library(data.table)
library(ggplot2)
library(stringr)
library(zoo)
library(xtable)
library(abind)
library(PerformanceAnalytics)
library(scales)
library(plyr)


load('cache/q.data.RData')
load('cache/core.dt.RData')
load('cache/final.bl.RData')
load('cache/market.set.RData')
load('cache/example.dt.RData')

source('lib/aux.functions.R')
#library(ProjectTemplate)
#load.project()
###ADD NAs for the case of no ranking ( if NA, no raking)
final.bl <- final.bl[,Method:=ifelse(Method=='true',strategies[1],ifelse(Method=='naive',strategies[2],strategies[3]))]

final.bl$Method <- factor(final.bl$Method,levels=strategies)
final.bl$Views <- factor(final.bl$Views,levels=c('CONS','TP','EPS','Market'))

final.bl <- final.bl[,ann.ret:=ann.ret*100][,ann.st:=ann.sd*100]
bl.results <- acast(unique(melt(data = final.bl,id.vars = c('Method','Views','type'),measure.vars  = c('ann.ret','ann.st','ann.sr','meanViews','Ave.TO')),by=c('Method','variable','Views','type')),Views~Method~variable~type,value.var = 'value')




##p values
##
##
##
library(rapportools)
cum.ret <- final.bl[,.(Quarters,Views,Method,type,ann.port.ret)][,ann.cum.ret:=rollapplyr(ann.port.ret,seq_len(length(ann.port.ret)),function(i){prod(1+i)-1}),by=.(Views,Method,type)]

ttest <-lapply(c('CONS','Market','TP'),t_test_p_value)

detach("package:rapportools", unload=TRUE)
detach("package:reshape", unload=TRUE)
@





\begin{longtabu} to \linewidth{l*{5}{Y}}
\caption{Significance of cumulative returns} \\
\label{tab:sig} \\
\multicolumn{5}{l}{\parbox{\linewidth}{The table demonstrates a pairwise statisitical test in difference of the cumulative returns of all strategies vs. \Market{} (Panel A) and vs. \textit{CONS} strategy (Panel B). Case of \tr{} shows  the known future information; \naive{} is the case of ranking information know at $t-1$, and the \default{} is the case of using all ranking information for up to $t-1$. \textit{TP} is the strategy with rankings based on the accuracy in target prices, \textit{CONS} is the strategy based on the consensus among the analysts regarding a stock's expected return. \textit{EPS} is the strategy with rankings based on the accuracy of EPS forecasts. Stocks in the \all{} sample are subsamples of the S\&P 500, stocks in the \same{} sample integrate both the EPS and TP datasets.}}\\
\toprule
  &\multicolumn{2}{c}{\all{}}&\multicolumn{2}{c}{\same{}}\\
  &t value& Pr$(>\vert t\vert)$ & t value & Pr$(>\vert t\vert)$\\
\midrule
\endfirsthead

&\multicolumn{2}{c}{\all{}}&\multicolumn{2}{c}{\same{}}\\
  &t value& Pr$(>\vert t\vert)$ & t value & Pr$(>\vert t\vert)$\\
\midrule
\endhead

\multicolumn{5}{r}{\textit{\footnotesize{... continued next page}}}\\
\endfoot
\endlastfoot

\multicolumn{5}{c}{\textbf{Panel A: \Market{} }} \\
&\multicolumn{4}{l}{\textbf{\tr{}}} \\
<<t-stat-tr-mkt,echo=F,results='asis'>>=
print(xtable(acast(melt(ttest[[2]][,,1,]),Var1~Var2+Var3),display=c('s','f','f','f','f'),digits=3),only.contents=T,include.rownames=F,NA.string='-',include.colnames=FALSE,hline.after=NULL, format.args=list(big.mark = " ", decimal.mark = "."),add.to.row=list(pos=list(3,0,1,2),command=c('\\midrule \n','\\textit{CONS}&','\\textit{TP}&','\\textit{EPS}&')),sanitize.text.function = function(x) x)
@
&\multicolumn{4}{l}{\textbf{\naive{} }} \\
<<t-stat-naive-mkt,echo=F,results='asis'>>=
print(xtable(acast(melt(ttest[[2]][,,2,]),Var1~Var2+Var3),display=c('s','f','f','f','f'),digits=3),only.contents=T,include.rownames=F,NA.string='-',include.colnames=FALSE,hline.after=NULL, format.args=list(big.mark = " ", decimal.mark = "."),add.to.row=list(pos=list(3,0,1,2),command=c('\\midrule \n','\\textit{CONS}&','\\textit{TP}&','\\textit{EPS}&')),sanitize.text.function = function(x) x)
@
&\multicolumn{4}{l}{\textbf{\default{} }} \\
<<t-stat-default-mkt,echo=F,results='asis'>>=
print(xtable(acast(melt(ttest[[2]][,,3,]),Var1~Var2+Var3),display=c('s','f','f','f','f'),digits=3),only.contents=T,include.rownames=F,NA.string='-',include.colnames=FALSE,hline.after=NULL, format.args=list(big.mark = " ", decimal.mark = "."),add.to.row=list(pos=list(3,0,1,2),command=c('\\midrule \n','\\textit{CONS}&','\\textit{TP}&','\\textit{EPS}&')),sanitize.text.function = function(x) x)
@
\multicolumn{5}{c}{\textbf{Panel B: \textit{CONS} }} \\
&\multicolumn{4}{l}{\textbf{\tr{} }} \\
<<t-stat-tr,echo=F,results='asis'>>=
print(xtable(acast(melt(ttest[[1]][,,1,]),Var1~Var2+Var3),display=c('s','f','f','f','f'),digits=3),only.contents=T,include.rownames=F,NA.string='-',include.colnames=FALSE,hline.after=NULL, format.args=list(big.mark = " ", decimal.mark = "."),add.to.row=list(pos=list(3,0,1,2),command=c('\\midrule \n','\\textit{TP}&','\\textit{EPS}&','\\textit{Market}&')),sanitize.text.function = function(x) x)
@
&\multicolumn{4}{l}{\textbf{\naive{} }} \\
<<t-stat-naive,echo=F,results='asis'>>=
print(xtable(acast(melt(ttest[[1]][,,2,]),Var1~Var2+Var3),display=c('s','f','f','f','f'),digits=3),only.contents=T,include.rownames=F,NA.string='-',include.colnames=FALSE,hline.after=NULL, format.args=list(big.mark = " ", decimal.mark = "."),add.to.row=list(pos=list(3,0,1,2),command=c('\\midrule \n','\\textit{TP}&','\\textit{EPS}&','\\textit{Market}&')),sanitize.text.function = function(x) x)
@
&\multicolumn{4}{l}{\textbf{\default{} }} \\
<<t-stat-default,echo=F,results='asis'>>=
print(xtable(acast(melt(ttest[[1]][,,3,]),Var1~Var2+Var3),display=c('s','f','f','f','f'),digits=3),only.contents=T,include.rownames=F,NA.string='-',include.colnames=FALSE,hline.after=NULL, format.args=list(big.mark = " ", decimal.mark = "."),add.to.row=list(pos=list(3,0,1,2),command=c('\\midrule \n','\\textit{TP}&','\\textit{EPS}&','\\textit{Market}&')),sanitize.text.function = function(x) x)
@
\multicolumn{5}{c}{\textbf{Panel C: \textit{TP} }} \\
&\multicolumn{4}{l}{\textbf{\tr{} }} \\
<<t-stat-tr-tp,echo=F,results='asis'>>=
print(xtable(acast(melt(ttest[[3]][,,1,]),Var1~Var2+Var3),display=c('s','f','f','f','f'),digits=3),only.contents=T,include.rownames=F,NA.string='-',include.colnames=FALSE,hline.after=NULL, format.args=list(big.mark = " ", decimal.mark = "."),add.to.row=list(pos=list(3,0,1,2),command=c('\\midrule \n','\\textit{CONS}&','\\textit{EPS}&','\\textit{Market}&')),sanitize.text.function = function(x) x)
@
&\multicolumn{4}{l}{\textbf{\naive{} }} \\
<<t-stat-naive-tp,echo=F,results='asis'>>=
print(xtable(acast(melt(ttest[[3]][,,2,]),Var1~Var2+Var3),display=c('s','f','f','f','f'),digits=3),only.contents=T,include.rownames=F,NA.string='-',include.colnames=FALSE,hline.after=NULL, format.args=list(big.mark = " ", decimal.mark = "."),add.to.row=list(pos=list(3,0,1,2),command=c('\\midrule \n','\\textit{CONS}&','\\textit{EPS}&','\\textit{Market}&')),sanitize.text.function = function(x) x)
@
&\multicolumn{4}{l}{\textbf{\default{} }} \\
<<t-stat-default-tp,echo=F,results='asis'>>=
print(xtable(acast(melt(ttest[[3]][,,3,]),Var1~Var2+Var3),display=c('s','f','f','f','f'),digits=3),only.contents=T,include.rownames=F,NA.string='-',include.colnames=FALSE,hline.after=NULL, format.args=list(big.mark = " ", decimal.mark = "."),add.to.row=list(pos=list(3,0,1,2),command=c('\\bottomrule \n','\\textit{CONS}&','\\textit{EPS}&','\\textit{Market}&')),sanitize.text.function = function(x) x)
@
\end{longtabu}

